name: CI

on: [ push ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.x, 16.x ]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - run: npm ci
      - run: npm test
      - uses: codecov/codecov-action@v1

  deploy:
    name: deploy
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        node-version: [ 14.x ]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      - run: npm ci
      - name: setup dev .env
        if: github.ref == 'refs/heads/develop'
        run: npm run setup_dotenv
        env:
          LOG_LEVEL: debug
          REGION: us-east-1
          STAGE: dev
      - name: setup prod .env
        if: github.ref == 'refs/heads/master'
        run: npm run setup_dotenv
        env:
          LOG_LEVEL: silent
          REGION: us-east-1
          STAGE: prod
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - run: npm run deploy
